<?php
// src/Quiz/BasicBundle/Entity/User.php
namespace Quiz\BasicBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\UserInterface;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Quiz\BasicBundle\Entity\User
 *
 * @ORM\Table(name="g_users")
 * @ORM\Entity(repositoryClass="Quiz\BasicBundle\Entity\UserRepository")
 */
class User implements UserInterface, \Serializable
{
	/**
	 * @ORM\Column(type="integer")
	 * @ORM\Id
	 * @ORM\GeneratedValue(strategy="AUTO")
	 */
	private $id;

	/**
	 * @ORM\Column(type="string", length=25, unique=true)
	 */
	private $username;

	/**
	 * @ORM\Column(type="string", length=64)
	 */
	private $password;

	/**
	 * @ORM\Column(name="is_active", type="boolean")
	 */
	private $isActive;
	
	/**
	 * @ORM\ManyToMany(targetEntity="Role", inversedBy="users")
	 *
	 */
	private $roles;
	
	/**
	 * @ORM\Column(type="string", length=60)
	 */
	private $salt;

	public function __construct()
	{
		$this->isActive = true;
		$this->roles = new ArrayCollection();
		$this->salt = md5(uniqid(null, true));
	}

	/**
	 * @inheritDoc
	 */
	public function getUsername()
	{
		return $this->username;
	}

	/**
	 * @inheritDoc
	 */
	public function getSalt()
	{
		return $this->salt;
	}

	/**
	 * @inheritDoc
	 */
	public function getPassword()
	{
		return $this->password;
	}

    public function getRoles()
    {
        return $this->roles->toArray();
    }

	/**
	 * @inheritDoc
	 */
	public function eraseCredentials()
	{
	}

	/**
	 * @see \Serializable::serialize()
	 */
	public function serialize()
	{
		return serialize(array(
				$this->id,
				$this->username,
				$this->password,
				$this->salt,
		));
	}

	/**
	 * @see \Serializable::unserialize()
	 */
	public function unserialize($serialized)
	{
		list (
				$this->id,
				$this->username,
				$this->password,
				$this->salt
		) = unserialize($serialized);
	}
}